create table
  public.ref_leagues_users (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    user_id uuid not null,
    league_id bigint not null,
    constraint ref_leagues_users_pkey primary key (id),
    constraint ref_leagues_users_league_id_fkey foreign key (league_id) references leagues (id) on delete cascade,
    constraint ref_leagues_users_user_id_fkey foreign key (user_id) references profiles (user_id) on delete cascade
  ) tablespace pg_default;

CREATE POLICY "read_access"
ON public.ref_leagues_users
FOR SELECT USING (
  true
);

CREATE POLICY "insert_access"
ON public.ref_leagues_users
FOR INSERT 
TO authenticated 
WITH CHECK (true);

CREATE POLICY "delete_access_to_author"
ON public.ref_leagues_users
FOR DELETE USING (
    EXISTS (
            SELECT 1 FROM public.leagues
            WHERE leagues.id = league_id
            AND leagues.author_id = auth.uid()
        )
);

CREATE POLICY "delete_access_to_user"
ON public.ref_leagues_users
FOR DELETE USING (
    user_id = auth.uid()
);